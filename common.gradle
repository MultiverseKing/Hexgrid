//
// This file is to be applied to every subproject.
//

apply plugin: 'java'
apply plugin: 'maven'

String mavenGroupId = 'org.multiverseking.hexgrid'
String mavenVersion = '1.0-SNAPSHOT'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
		jmonkeyengine_version = 'v3.2.1-stable'
                slf4j = '1.7.25'
}

repositories {
    mavenCentral();
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories		
    maven { url "https://jitpack.io" }
}

dependencies {
    // Adding dependencies here will add the dependencies to each subproject.
    testCompile group: 'junit', name: 'junit', version: '4.10'
    compile "com.github.jMonkeyEngine.jMonkeyEngine:jme3-core:$jmonkeyengine_version"
    compile "com.github.jMonkeyEngine.jMonkeyEngine:jme3-desktop:$jmonkeyengine_version"
    compile "com.github.jMonkeyEngine.jMonkeyEngine:jme3-lwjgl:$jmonkeyengine_version"
    compile "com.github.jMonkeyEngine.jMonkeyEngine:jme3-effects:$jmonkeyengine_version"
    compile fileTree(dir: '../libs', include: ['*.jar'])
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j
}

String mavenArtifactId = name

group = mavenGroupId
version = mavenVersion

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId = mavenGroupId
        artifactId = mavenArtifactId
        version = mavenVersion
    }
}

task createFolders(description: 'Creates the source folders if they do not exist.') doLast {
    sourceSets*.allSource*.srcDirs*.each { File srcDir ->
        if (!srcDir.isDirectory()) {
            println "Creating source folder: ${srcDir}"
            srcDir.mkdirs()
        }
    }
}

sourceSets {
	main {
		java { srcDir 'src'}
		resources { srcDir 'assets' }
	}
}
